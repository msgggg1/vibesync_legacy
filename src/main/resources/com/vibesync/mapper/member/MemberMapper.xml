<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.vibesync.member.mapper.MemberMapper">

	<insert id="insertUser" parameterType="com.vibesync.member.domain.SignUpDTO">
		INSERT INTO userAccount
		(ac_idx, email, pw, nickname, name, created_at, category_idx, ROLE)
		VALUES (useraccount_seq.nextval, #{email}, #{password}, #{nickname}, #{name}, SYSTIMESTAMP, #{categoryIdx}, 'USER')
	</insert>

	<select id="findVOByEmail" resultType="com.vibesync.member.domain.MemberVO">
		SELECT ac_idx, nickname, img, name, category_idx, email
		FROM userAccount WHERE email = #{email}
	</select>
	
	<resultMap id="memberResultMap" type="com.vibesync.member.domain.Member">
        <id property="acIdx" column="ac_idx"/>
        <result property="email" column="email"/>
        <result property="pw" column="pw"/>
        <result property="nickname" column="nickname"/>
        <result property="img" column="img"/>
        <result property="name" column="name"/>
        <result property="createdAt" column="created_at"/>
        <result property="categoryIdx" column="category_idx"/>
        <result property="kakaoAuthId" column="kakao_auth_id"/>
        <result property="googleId" column="google_id"/>
        <result property="role" column="role"/>
    </resultMap>

    <select id="findByEmail" resultMap="memberResultMap">
        SELECT 
            ac_idx, pw, nickname, img, name, category_idx, created_at, 
            kakao_auth_id, google_id, email, role
        FROM 
            userAccount 
        WHERE 
            email = #{email}
    </select>

	<select id="duplicateTest" resultType="com.vibesync.member.domain.MemberVO">
		SELECT nickname, email
		FROM userAccount
		WHERE nickname = #{nickname} OR email = #{email}
	</select>

	<select id="preferredCategoryIdx" resultType="Integer">
		SELECT category_idx FROM userAccount WHERE ac_idx = #{acIdx}
	</select>

	<select id="getBasicUserInfoById"
		resultType="com.vibesync.member.domain.MemberSummaryVO">
		SELECT ac_idx, nickname, img, name FROM userAccount WHERE ac_idx = #{acIdx}
	</select>

	<!-- 특정 사용자가 작성한 총 게시글 수 -->
	<select id="getPostCount" resultType="Integer">
		SELECT COUNT(note_idx)
		FROM note
		WHERE ac_idx = #{acIdx}
	</select>

	<!-- 비밀번호 재설정 -->
	<!-- 비밀번호 재설정 토큰 DB저장 -->
	<insert id="saveResetToken">
		INSERT INTO passwordResetTokens (token, userEmail, expiryDate) VALUES (#{token}, #{email},
		#{expiryDate})
	</insert>

	<!-- 유효한 토큰 사용하여 이메일 조회 -->
	<select id="findEmailByValidToken" resultType="String">
		SELECT userEmail FROM passwordResetTokens WHERE token = #{token} AND expiryDate >
		SYSTIMESTAMP
	</select>
	<!-- 사용된 토큰 DB삭제 -->
	<delete id="deleteToken">
		DELETE FROM passwordResetTokens WHERE token = #{token}
	</delete>

	<!-- 이메일 주소를 기준으로 사용자의 비밀번호 업데이트 -->
	<update id="updatePasswordAndSalt">
		UPDATE userAccount SET pw = #{pw}, salt = #{salt} WHERE email = #{email}
	</update>


</mapper>  
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<!-- 보안 설정이 필요 없는 경로 -->
	<security:http pattern="/static/**" security="none"></security:http>
	<security:http pattern="/design/**" security="none"></security:http>
	<security:http pattern="/css/**" security="none"></security:http>
	<security:http pattern="/js/**" security="none"></security:http>

	<!-- 스프링 표현식(SpEL) 사용 여부 -->
	<security:http use-expressions="true">
		<!-- 접근 제어 -->
		<security:intercept-url pattern="/login/**"
			access="isAuthenticated()" />
		<security:intercept-url pattern="/**"
			access="permitAll" />

		<!-- 로그인 처리 -->
		<security:form-login
			login-page="/login/login.htm" default-target-url="/index.htm"
			username-parameter="username" password-parameter="password" />

		<!-- 로그아웃 처리 -->
		<security:logout invalidate-session="true"
			logout-success-url="/" logout-url="/joinus/logout.htm" />
		<!-- 로그아웃 성공 시 다양한 처리를 하기 원한다면 클래스 선언 후 빈 등록 success-handler-ref = "logoutSuccessHandler" -->
	</security:http>

	<!-- 비밀번호 인코딩 -->
	<!-- PasswordEncoder -->
	<bean id="bCryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>

	<!-- 애플리케이션 전반의 인증 처리 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="user" password="{noop}1111"
					authorities="ROLE_USER" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>

</beans>